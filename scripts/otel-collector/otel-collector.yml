receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
      grpc:
        endpoint: 0.0.0.0:4317

processors:
  # batch metrics before sending to reduce API usage
  batch:
    timeout: 10s
    send_batch_size: 1024

exporters:
  # Logs exporter - send to Loki
  loki:
    endpoint: "http://loki:3100/loki/api/v1/push"

  # Metrics exporter - expose for Prometheus to scrape
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: "otel"

  # Traces exporter - send to Tempo
  otlp:
    endpoint: tempo:4317
    tls:
      insecure: true

  # Logging exporter for debugging (optional)
  logging:
    loglevel: info

# https://github.com/open-telemetry/opentelemetry-collector/blob/main/extension/README.md
extensions:
  # responsible for responding to health check calls on behalf of the collector
  health_check:
    endpoint: 0.0.0.0:13133
  # fetches the collector's performance data
  pprof:
    endpoint: 0.0.0.0:1888
  # serves as an http endpoint that provides live debugging data about instrumented components
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    # Metrics pipeline
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
    
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp]
    
    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [loki]
