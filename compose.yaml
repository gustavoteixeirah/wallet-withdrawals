services:
  db:
    image: postgres:16
    restart: no
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: walletwithdrawals
      POSTGRES_PASSWORD: walletwithdrawals
      POSTGRES_DB: walletwithdrawals
    volumes:
      - postgres:/var/lib/postgresql
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  grafana:
    image: grafana/grafana-oss:10.4.3
    container_name: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
      - otel-collector
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./scripts/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./scripts/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./scripts/grafana/grafana.ini:/etc/grafana/grafana.ini

  loki:
    image: grafana/loki:2.9.8
    container_name: loki
    ports:
      - "3100:3100"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    container_name: otel-collector
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./scripts/otel-collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    expose:
      - "4317"
      - "4318"
    depends_on:
      - loki
      - tempo

  prometheus:
    image: quay.io/prometheus/prometheus:v2.52.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./scripts/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo:2.5.0
    container_name: tempo
    command: -config.file=/etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
    volumes:
      - ./scripts/tempo/tempo.yml:/etc/tempo-config.yml

volumes:
  postgres:
  postgres_data:
